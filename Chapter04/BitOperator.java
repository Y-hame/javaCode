public class BitOperator{
	public static void main (String [] args){
		//运算2&3
		//1.先得到2 的补码=》 2 的原码 00000000 00000000 00000000 00000010
		//   2 的补码 00000000 00000000 00000000 00000010
		//2. 同理给出3的原码和补码，使用补码进行运算
		//   00000000 00000000 00000000 00000010
		//   00000000 00000000 00000000 00000011
		// & 00000000 00000000 00000000 00000010   运算后的补码  ，最终结果是2
		System.out.println(2&3);  //2
		
		//   10000000 00000000 00000000 00000010  -2的原码
		//	 11111111 11111111 11111111 11111101   -2 的反码
		//	 11111111 11111111 11111111 11111110   -2  的补码
		//	 取反 
		//	 00000000 00000000 00000000 00000001 运算结果就是1
		//	 
		System.out.println(~-2);


		//推导  负数的补码 = 它的反码 + 1 ；
		//1. 得到2的补码 00000000 00000000 00000000 00000010
		//2. ~2 操作     11111111 11111111 11111111 11111101 运算后的补码
		//3. 运算后的反码 11111111 11111111 11111111 11111100
		//4. 运算后的原码 10000000 00000000 00000000 00000011 ――》  -3 
		System.out.println(~2);


		// 2的原码 00000000 00000000 00000000 00000010
		//  
		// 3的原码 00000000 00000000 00000000 00000011
		//    ^
		//         00000000 00000000 00000000 00000001   -> 结果1
		System.out.println(2^3);





	}
}